<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls">
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
    <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <DockPanel x:Name="LayoutRoot" Background="Transparent">
            <Border Width="16" Height="16" Margin="0 1 4 0" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" DockPanel.Dock="Left"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <c:Cell>
                <Path x:Name="CheckMark" Width="10" Height="10" Margin="2" Visibility="Collapsed" Stretch="Fill" Fill="{TemplateBinding Foreground}"
                    Data="F1 M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z" />
                <Rectangle x:Name="Indeterminate" Width="8" Height="8" Margin="4" Fill="{TemplateBinding Foreground}" Visibility="Hidden" />
              </c:Cell>
            </Border>
            <ContentPresenter VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
            <!--<TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" />-->
          </DockPanel>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <!-- TODO: Buggy resharper -->
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsThreeState}" Value="True" />
                <!-- TODO: Buggy resharper -->
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="{x:Null}" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
              <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="Indeterminate" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
              <Setter TargetName="Indeterminate" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource ButtonTextHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource ButtonTextPressed}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- Specially for checkboxes with highlighted background -->
  <Style x:Key="CheckBox.White" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
    <Style.Triggers>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource InputTextHover}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- Checkbox-in-datagrid styles-->
  <Style x:Key="DataGridCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>

  <Style x:Key="DataGridEditingCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>
</ResourceDictionary>