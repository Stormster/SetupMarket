<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls" xmlns:presentation="clr-namespace:FirstFloor.ModernUI.Presentation">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBox.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/MenuItem.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ButtonWithComboBox.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/BetterTextBox.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="HierarchicalComboBoxMenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="True" />

    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
    <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
    <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="7 3 8 3" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Visibility" Value="Visible" />
    <Setter Property="IsTextSearchEnabled" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Grid.Column="0" Placement="Bottom" Margin="1"
                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
              <Popup.ToolTip>
                <ToolTip Visibility="Collapsed" />
              </Popup.ToolTip>
              <Grid Margin="0" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">

                <Border x:Name="DropDownBorder" Background="{DynamicResource PopupBackground}" BorderBrush="{DynamicResource WindowBorderActive}"
                    BorderThickness="1">
                  <!-- popup border thickness not dependent on BorderThickness property-->
                  <ScrollViewer x:Name="DropDownScrollViewer">
                    <Grid RenderOptions.ClearTypeHint="Enabled" Background="Green">
                      <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle x:Name="OpaqueRect" Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                            Width="{Binding ActualWidth, ElementName=DropDownBorder}" Fill="{Binding Background, ElementName=DropDownBorder}" />
                      </Canvas>
                      <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </Grid>
            </Popup>
            <ToggleButton x:Name="PART_Button" Grid.ColumnSpan="2" Grid.Column="0" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsSubmenuOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Padding="0 0 0 10" />
            <Path x:Name="Arrow" Grid.ColumnSpan="2" Grid.Column="0" Margin="3 1 8 0" Fill="{TemplateBinding Foreground}"
                Data="{DynamicResource DownArrowGeometry}" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" />
            <ContentPresenter x:Name="PART_Text" Grid.Column="0" ContentSource="Header" RecognizesAccessKey="False" Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="False"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="TextBlock.Foreground" Value="{DynamicResource InputTextHover}" TargetName="PART_Text" />
              <Setter Property="Fill" Value="{DynamicResource InputTextHover}" TargetName="Arrow" />
              <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" TargetName="PART_Button" />
              <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" TargetName="PART_Button" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsFocused" Value="True" />
                <Condition Property="IsSubmenuOpen" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" TargetName="PART_Button" />
            </MultiTrigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
              <Setter Property="TextBlock.Foreground" Value="{DynamicResource InputTextHover}" TargetName="PART_Text" />
              <Setter Property="Fill" Value="{DynamicResource InputTextHover}" TargetName="Arrow" />
              <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" TargetName="PART_Button" />
              <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" TargetName="PART_Button" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="TextBlock.Foreground" Value="{DynamicResource InputTextDisabled}" TargetName="PART_Text" />
              <Setter Property="Fill" Value="{DynamicResource InputTextDisabled}" TargetName="Arrow" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <!--<Style.Triggers>
      <Trigger Binding="{Binding Header, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TypeToBooleanConverter}, ConverterParameter=ContentControl}" Value="True">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <ContentPresenter x:Name="PART_Text" ContentSource="Header" RecognizesAccessKey="False" Margin="{TemplateBinding Padding}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="False"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>-->
  </Style>

  <ControlTemplate x:Key="SpecialMenuItemHeaderControlTemplate" TargetType="{x:Type c:HierarchicalItem}">
    <Grid x:Name="Bg" SnapsToDevicePixels="True" Background="Transparent">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="54" />
      </Grid.ColumnDefinitions>
      <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="7 2 8 2" RecognizesAccessKey="False"
          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      <Path x:Name="RightArrow" Grid.Column="1" VerticalAlignment="Center" Margin="41 0 0 0" Fill="{TemplateBinding MenuItem.Foreground}"
          Data="{StaticResource RightArrow}" IsHitTestVisible="False" />
      <Popup x:Name="PART_Popup" Grid.Column="0" Grid.ColumnSpan="2" AllowsTransparency="True" Placement="Right"
          IsOpen="{Binding IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}" Focusable="False"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
        <Grid Margin="0" Background="{DynamicResource PopupBackground}">
          <Border x:Name="SubMenuBorder" Background="{DynamicResource PopupBackground}" BorderBrush="{DynamicResource WindowBorderActive}" BorderThickness="1">
            <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="True" Foreground="{DynamicResource ItemText}">
              <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.IsSharedSizeScope="True" RenderOptions.ClearTypeHint="Enabled" />
            </ScrollViewer>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="Bg" Property="Background" Value="{DynamicResource Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
        <Setter TargetName="RightArrow" Property="Fill" Value="{DynamicResource ItemTextSelected}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
        <Setter TargetName="RightArrow" Property="Fill" Value="{DynamicResource ItemTextDisabled}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="SpecialMenuItemControlTemplate" TargetType="{x:Type c:HierarchicalItem}">
    <Border x:Name="Bg" SnapsToDevicePixels="True">
      <Border.ToolTip>
        <ToolTip Placement="{Binding ToolTipPlacement, RelativeSource={RelativeSource TemplatedParent}}"
            Visibility="{Binding PreviewValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter},
                    ConverterParameter=inverse}">
          <ContentPresenter IsHitTestVisible="False" Margin="4" Content="{Binding PreviewValue, RelativeSource={RelativeSource TemplatedParent}}"
              RecognizesAccessKey="False" />
        </ToolTip>
      </Border.ToolTip>
      <ContentPresenter ContentSource="Header" Margin="7 2 62 2" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
          ToolTip="{x:Null}" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="Bg" Property="Background" Value="{DynamicResource Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type c:HierarchicalItem}">
    <Setter Property="Background" Value="{DynamicResource PopupBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
    <Setter Property="Template" Value="{StaticResource SpecialMenuItemControlTemplate}" />
    <Setter Property="IsTextSearchEnabled" Value="True" />
    <Style.Triggers>
      <Trigger Property="Role" Value="TopLevelHeader">
        <Setter Property="Padding" Value="7 2 8 2" />
        <Setter Property="Template" Value="{StaticResource SpecialMenuItemHeaderControlTemplate}" />
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Padding" Value="2 3 2 3" />
        <Setter Property="Template" Value="{StaticResource SpecialMenuItemHeaderControlTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <ControlTemplate x:Key="HierarchicalComboBox.DefaultTemplate" TargetType="{x:Type c:HierarchicalComboBox}">
    <Menu VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{StaticResource ButtonWithComboBoxWrapperMenu}" x:Name="PART_Menu">
      <c:LazyMenuItem x:Name="PART_MenuItem" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{StaticResource HierarchicalComboBoxMenuItem}"
          ItemsSource="{TemplateBinding InnerItems}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding InnerMargin}"
          Padding="{TemplateBinding Padding}">
        <MenuItem.Header>
          <ContentPresenter x:Name="PART_Text" Content="{TemplateBinding SelectedItem}" ContentTemplate="{TemplateBinding SelectedContent}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
        </MenuItem.Header>
      </c:LazyMenuItem>
    </Menu>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource InputTextHover}" TargetName="PART_Text" />
      </Trigger>
      <Trigger Property="IsSubmenuOpen" Value="True" SourceName="PART_MenuItem">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource InputTextHover}" TargetName="PART_Text" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource InputTextDisabled}" TargetName="PART_Text" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="HierarchicalComboBoxMenuItem.Borderless" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource HierarchicalComboBoxMenuItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Grid.Column="0" Placement="Bottom" Margin="1"
                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
              <Grid Margin="0" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">

                <Border x:Name="DropDownBorder" Background="{DynamicResource PopupBackground}" BorderBrush="{DynamicResource WindowBorderActive}"
                    BorderThickness="1" TextBlock.Foreground="{DynamicResource ItemText}">
                  <!-- popup border thickness not dependent on BorderThickness property-->
                  <ScrollViewer x:Name="DropDownScrollViewer">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle x:Name="OpaqueRect" Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                            Width="{Binding ActualWidth, ElementName=DropDownBorder}" Fill="{Binding Background, ElementName=DropDownBorder}" />
                      </Canvas>
                      <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </Grid>
            </Popup>
            <ToggleButton x:Name="PART_Button" Grid.ColumnSpan="2" Grid.Column="0" Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsSubmenuOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Padding="0 0 0 10" />
            <Path x:Name="Arrow" Grid.ColumnSpan="2" Grid.Column="0" Margin="3 1 8 0" Fill="{TemplateBinding Foreground}"
                Data="{DynamicResource DownArrowGeometry}" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" />
            <ContentPresenter x:Name="PART_Text" Grid.Column="0" ContentSource="Header" RecognizesAccessKey="False" Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsHitTestVisible="False"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="HierarchicalComboBoxTemplate.Borderless" TargetType="{x:Type c:HierarchicalComboBox}">
    <c:AdornedControl x:Name="Outline" IsAdornerVisible="False">
      <c:AdornedControl.AdornerContent>
        <Border Margin="{StaticResource BorderlessOutline}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" IsHitTestVisible="False" />
      </c:AdornedControl.AdornerContent>
      <Menu VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{StaticResource ButtonWithComboBoxWrapperMenu}" x:Name="PART_Menu">
        <c:LazyMenuItem x:Name="PART_MenuItem" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ItemsSource="{TemplateBinding InnerItems}"
            Foreground="{TemplateBinding Foreground}" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
            Margin="{TemplateBinding InnerMargin}" Padding="0" Style="{StaticResource HierarchicalComboBoxMenuItem.Borderless}">
          <MenuItem.Header>
            <ContentPresenter x:Name="PART_Text" Content="{TemplateBinding SelectedItem}" ContentTemplate="{TemplateBinding SelectedContent}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </MenuItem.Header>
        </c:LazyMenuItem>
      </Menu>
    </c:AdornedControl>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsEnabled" Value="True" />
          <Condition Property="IsMouseOver" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
        <Setter TargetName="Outline" Property="IsAdornerVisible" Value="True" />
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
      </Trigger>
      <Trigger Property="IsFocused" SourceName="PART_MenuItem" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
        <Setter TargetName="Outline" Property="IsAdornerVisible" Value="True" />
        <Setter TargetName="Outline" Property="Order" Value="5" />
      </Trigger>
      <Trigger Property="IsSubmenuOpen" SourceName="PART_MenuItem" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
        <Setter TargetName="Outline" Property="IsAdornerVisible" Value="True" />
        <Setter TargetName="Outline" Property="Order" Value="5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="HierarchicalComboBox.Base" TargetType="c:HierarchicalComboBox">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="SelectedContent">
      <Setter.Value>
        <DataTemplate DataType="{x:Type presentation:Displayable}">
          <TextBlock TextTrimming="CharacterEllipsis">
            <TextBlock.Text>
              <MultiBinding Converter="{StaticResource BindableConverterConverter}">
                <Binding Path="DisplayName" />
                <Binding Path="SelectedItemHeaderConverter" RelativeSource="{RelativeSource AncestorType=c:HierarchicalComboBox}" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template" Value="{StaticResource HierarchicalComboBox.DefaultTemplate}" />
  </Style>

  <Style TargetType="c:HierarchicalComboBox" BasedOn="{StaticResource HierarchicalComboBox.Base}">
    <Setter Property="Foreground" Value="{DynamicResource InputText}" />
    <Setter Property="Background" Value="{DynamicResource InputBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="7 3 8 3" />
  </Style>

  <Style x:Key="HierarchicalComboBox.Borderless" TargetType="{x:Type c:HierarchicalComboBox}" BasedOn="{StaticResource HierarchicalComboBox.Base}">
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template" Value="{StaticResource HierarchicalComboBoxTemplate.Borderless}" />
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate.Borderless}" />
  </Style>

  <Style x:Key="HierarchicalComboBox.Borderless.White" TargetType="{x:Type c:HierarchicalComboBox}" BasedOn="{StaticResource HierarchicalComboBox.Base}">
    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template" Value="{StaticResource HierarchicalComboBoxTemplate.Borderless}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsEnabled" Value="True" />
          <Condition Property="IsMouseOver" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush" Value="{DynamicResource InputTextHover}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>